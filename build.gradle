plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '1.0.11'
}

version = project.version
group = 'com.alldark.alldarkmod'
archivesBaseName = 'alldarkmod'

// Mojang ships Java 21 to end users in 1.21+, so your mod should target Java 21.
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty('java.version')}, JVM: ${System.getProperty('java.vm.version')} (${System.getProperty('java.vendor')}), Arch: ${System.getProperty('os.arch')}"

neoForge {
    version = "21.0.103-beta"
    runs {
        client {
            client()
            workingDirectory project.file('run')
            property 'forge.enabledGameTestNamespaces', 'alldarkmod'
            mods {
                alldarkmod {
                    sourceSet sourceSets.main
                }
            }
        }
        server {
            server()
            workingDirectory project.file('run')
            property 'forge.enabledGameTestNamespaces', 'alldarkmod'
            mods {
                alldarkmod {
                    sourceSet sourceSets.main
                }
            }
        }
        gameTestServer {
            type = "gameTestServer"
            workingDirectory project.file('run')
            property 'forge.enabledGameTestNamespaces', 'alldarkmod'
            mods {
                alldarkmod {
                    sourceSet sourceSets.main
                }
            }
        }
        data {
            data()
            workingDirectory project.file('run')
            args '--mod', 'alldarkmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                alldarkmod {
                    sourceSet sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven {
        name = 'Mojang'
        url = 'https://libraries.minecraft.net/'
    }
    maven {
        name = 'LWJGL'
        url = 'https://repo1.maven.org/maven2/'
    }
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

dependencies {
    // Example mod dependency with JEI - uncomment if you want to use JEI
    // compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    // runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
    // implementation fg.deobf("blank:coolmod-${mc_version}:${coolmod_version}")
    // implementation fg.deobf(project(':MySisterMod'))
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "alldarkmod",
                "Specification-Vendor"    : "alldarkmodsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "alldarkmodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

tasks.withType(GenerateModuleMetadata).configureEach {
    enabled = false
} 